/*

-- What are the 5 oldest employees?

mysql> SELECT position, first_name, last_name, birth_date, CONCAT('$', CAST(wage AS DECIMAL(10, 2))) AS wage, address_line, city, us_state, zip 
FROM employees x 
INNER JOIN stores y ON x.store_id = y.store_id 
ORDER BY birth_date LIMIT 5;

+----------+------------+-----------+------------+--------+----------------------+------------+------------+-------+
| position | first_name | last_name | birth_date | wage   | address_line         | city       | us_state   | zip   |
+----------+------------+-----------+------------+--------+----------------------+------------+------------+-------+
| Manager  | Leopold    | Stotch    | 1960-09-24 | $56.50 | 1422 Electric Avenue | Cascade    | Arizona    | 58602 |
| Manager  | Mario      | Luigi     | 1970-04-24 | $55.00 | 8125 North Circle    | Toad Town  | California | 12586 |
| Cashier  | Victoria   | Johnson   | 1972-05-10 | $22.50 | 65135 Dodger Lane    | Funky Town | Arizona    | 59533 |
| Manager  | John       | Smith     | 1975-07-09 | $55.00 | 376 Green Lake Road  | Lake Leaf  | California | 12795 |
| Manager  | Eric       | Cartman   | 1976-11-10 | $56.00 | 416 Oak Drive        | West Park  | Nevada     | 30126 |
+----------+------------+-----------+------------+--------+----------------------+------------+------------+-------+


-- What are the 5 youngest employees? (Likely several ties due to no month in table, only birth year)

mysql> SELECT position, first_name, last_name, birth_date, CONCAT('$', CAST(wage AS DECIMAL(10, 2))) AS wage, address_line, city, us_state, zip 
FROM employees x 
INNER JOIN stores y ON x.store_id = y.store_id 
ORDER BY birth_date DESC LIMIT 5;
+----------------------+------------+------------+------------+--------+----------------------+-----------+------------+-------+
| position             | first_name | last_name  | birth_date | wage   | address_line         | city      | us_state   | zip   |
+----------------------+------------+------------+------------+--------+----------------------+-----------+------------+-------+
| Shipping & Receiving | Harry      | Armstrong  | 1996-04-17 | $19.25 | 376 Green Lake Road  | Lake Leaf | California | 12795 |
| Custodian            | Scruffy    | Farnsworth | 1995-11-02 | $17.00 | 8125 North Circle    | Toad Town | California | 12586 |
| Cashier              | Ava        | Liddel     | 1995-07-14 | $19.30 | 8125 North Circle    | Toad Town | California | 12586 |
| Cashier              | Jose       | Lopez      | 1994-09-27 | $18.70 | 1422 Electric Avenue | Cascade   | Arizona    | 58602 |
| Shipping & Receiving | Isaac      | Fuentes    | 1994-05-17 | $19.00 | 8125 North Circle    | Toad Town | California | 12586 |
+----------------------+------------+------------+------------+--------+----------------------+-----------+------------+-------+


--------------------------------------------------------------------------------------

How many employees born after 1990 are in each store?

mysql> SELECT s.store_id, address_line, city, us_state, zip, COUNT(*) AS Born_After_1990 
FROM stores AS s 
INNER JOIN employees AS e 
ON e.store_id = s.store_id 
WHERE YEAR(birth_date) > 1990 
GROUP BY s.store_id;
+----------+----------------------+------------+------------+-------+-----------------+
| store_id | address_line         | city       | us_state   | zip   | Born_After_1990 |
+----------+----------------------+------------+------------+-------+-----------------+
| 1217     | 8125 North Circle    | Toad Town  | California | 12586 |               5 |
| 1218     | 376 Green Lake Road  | Lake Leaf  | California | 12795 |               3 |
| 1258     | 1422 Electric Avenue | Cascade    | Arizona    | 58602 |               3 |
| 1259     | 65135 Dodger Lane    | Funky Town | Arizona    | 59533 |               1 |
| 1325     | 416 Oak Drive        | West Park  | Nevada     | 30126 |               2 |
+----------+----------------------+------------+------------+-------+-----------------+


------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
- SET operations on tables 'employees' and 'former_employees'
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------

-- Show all current and former employees by first_name, last_name WITHOUT duplicates:

mysql> SELECT first_name, last_name 
FROM employees 
UNION 
SELECT first_name, last_name 
FROM former_employees;
+------------+------------+
| first_name | last_name  |
+------------+------------+
| Mario      | Luigi      |
| John       | Smith      |
| Leopold    | Stotch     |
| Stan       | Marsh      |
| Eric       | Cartman    |
| Scruffy    | Farnsworth |
| Michael    | Mosley     |
| Janice     | Wild       |
| Richard    | Hedburg    |
| Jonathan   | Smith      |
| Kerry      | Potter     |
| Sheila     | Brown      |
| Joseph     | Smith      |
| Michael    | Carpenter  |
| Juan       | Lopez      |
| Maria      | Perez      |
| Mike       | Shields    |
| Dat        | Phan       |
| Penelope   | Marley     |
| Leonard    | Newton     |
| Isaac      | Fuentes    |
| Harry      | Armstrong  |
| Colby      | Lewis      |
| Jeffery    | Jefferson  |
| Rachel     | Mathews    |
| Juan       | Donalds    |
| Markus     | Black      |
| Jose       | Lopez      |
| John       | White      |
| Veronica   | Smith      |
| Alice      | Armstrong  |
| Lewis      | Nabokov    |
| Joseph     | West       |
| Victoria   | Johnson    |
| Ella       | Carrols    |
| Ava        | Liddel     |
| Zachary    | Moretz     |
| Gregory    | Kuniz      |
| Selina     | Sutherland |
| Tiffany    | Carpenter  |
| Joseph     | Navarro    |
| Marcus     | Jackson    |
| Jarod      | Marklar    |
| Richard    | McDonald   |
| Richard    | Johnson    |
| Alice      | Carrol     |
+------------+------------+

------------------------------------------------------------------------------------

-- Show all employees current and former
-- (Show 'current' and 'former' employees as a new column for the following)

mysql> SELECT 'current' AS employee_status, first_name, last_name 
FROM employees 
UNION ALL 
SELECT 'former' AS employee_status, first_name, last_name 
FROM former_employees;
+-----------------+------------+------------+
| employee_status | first_name | last_name  |
+-----------------+------------+------------+
| current         | Mario      | Luigi      |
| current         | John       | Smith      |
| current         | Leopold    | Stotch     |
| current         | Stan       | Marsh      |
| current         | Eric       | Cartman    |
| current         | Scruffy    | Farnsworth |
| current         | Michael    | Mosley     |
| current         | Janice     | Wild       |
| current         | Richard    | Hedburg    |
| current         | Jonathan   | Smith      |
| current         | Kerry      | Potter     |
| current         | Sheila     | Brown      |
| current         | Joseph     | Smith      |
| current         | Michael    | Carpenter  |
| current         | Juan       | Lopez      |
| current         | Maria      | Perez      |
| current         | Mike       | Shields    |
| current         | Dat        | Phan       |
| current         | Penelope   | Marley     |
| current         | Leonard    | Newton     |
| current         | Isaac      | Fuentes    |
| current         | Harry      | Armstrong  |
| current         | Colby      | Lewis      |
| current         | Jeffery    | Jefferson  |
| current         | Rachel     | Mathews    |
| current         | Juan       | Donalds    |
| current         | Markus     | Black      |
| current         | Jose       | Lopez      |
| current         | John       | White      |
| current         | Veronica   | Smith      |
| current         | Alice      | Armstrong  |
| current         | Lewis      | Nabokov    |
| current         | Joseph     | West       |
| current         | Victoria   | Johnson    |
| current         | Ella       | Carrols    |
| current         | Ava        | Liddel     |
| current         | Zachary    | Moretz     |
| current         | Gregory    | Kuniz      |
| current         | Selina     | Sutherland |
| current         | Tiffany    | Carpenter  |
| former          | Mario      | Luigi      |
| former          | Joseph     | Navarro    |
| former          | Michael    | Mosley     |
| former          | Marcus     | Jackson    |
| former          | Jarod      | Marklar    |
| former          | Richard    | McDonald   |
| former          | Ava        | Liddel     |
| former          | Gregory    | Kuniz      |
| former          | Richard    | Johnson    |
| former          | Jonathan   | Smith      |
| former          | Alice      | Carrol     |
+-----------------+------------+------------+


------------------------------------------------------------------------------------

-- Show only duplicate employee names by first_name, last_name

mysql> SELECT first_name, last_name 
FROM employees 
INTERSECT 
SELECT first_name, last_name
FROM former_employees;
+------------+-----------+
| first_name | last_name |
+------------+-----------+
| Mario      | Luigi     |
| Michael    | Mosley    |
| Jonathan   | Smith     |
| Ava        | Liddel    |
| Gregory    | Kuniz     |
+------------+-----------+

------------------------------------------------------------------------------------

-- All sales by same specific cashier:

mysql> SELECT s.sales_id, s.store_id, s.purch_date, s.quantity, e.emp_id, e.first_name, e.last_name 
FROM sales AS s 
INNER JOIN employees AS e ON s.emp_id= e.emp_id 
WHERE s.emp_id = '30037';
+----------+----------+------------+----------+--------+------------+-----------+
| sales_id | store_id | purch_date | quantity | emp_id | first_name | last_name |
+----------+----------+------------+----------+--------+------------+-----------+
| 20023    | 1218     | 03-23-2021 |        3 | 30037  | Zachary    | Moretz    |
| 20027    | 1218     | 06-01-2021 |        1 | 30037  | Zachary    | Moretz    |
| 20029    | 1218     | 09-15-2022 |        4 | 30037  | Zachary    | Moretz    |
| 20030    | 1218     | 11-07-2021 |        1 | 30037  | Zachary    | Moretz    |
+----------+----------+------------+----------+--------+------------+-----------+

--------------------------------------------------------------------------------------

-- Get amount sold by same cashier sortd by highest amount sold first (Where quantity matters)

mysql> SELECT SUM(s.quantity) AS NumberOfSales, e.emp_id, e.first_name, e.last_name 
FROM sales AS s 
INNER JOIN employees AS e ON s.emp_id = e.emp_id 
GROUP BY emp_id 
ORDER BY SUM(s.quantity) DESC;
+---------------+--------+------------+------------+
| NumberOfSales | emp_id | first_name | last_name  |
+---------------+--------+------------+------------+
|            16 | 30040  | Tiffany    | Carpenter  |
|            14 | 30032  | Lewis      | Nabokov    |
|            14 | 30030  | Veronica   | Smith      |
|            11 | 30033  | Joseph     | West       |
|            11 | 30036  | Ava        | Liddel     |
|            11 | 30028  | Jose       | Lopez      |
|             9 | 30026  | Juan       | Donalds    |
|             9 | 30037  | Zachary    | Moretz     |
|             9 | 30027  | Markus     | Black      |
|             8 | 30034  | Victoria   | Johnson    |
|             7 | 30039  | Selina     | Sutherland |
|             6 | 30035  | Ella       | Carrols    |
|             6 | 30029  | John       | White      |
|             5 | 30031  | Alice      | Armstrong  |
+---------------+--------+------------+------------+

-------------

-- Do same as previous, but instead of employees, see the amount sold at each store (Calculated with quantity)

mysql> SELECT SUM(s.quantity) AS NumberOfSales, st.store_id, st.city, st.us_state 
FROM sales AS s 
INNER JOIN stores AS st ON s.store_id = st.store_id 
GROUP BY store_id 
ORDER BY SUM(s.quantity) DESC;
+---------------+----------+------------+------------+
| NumberOfSales | store_id | city       | us_state   |
+---------------+----------+------------+------------+
|            36 | 1325     | West Park  | Nevada     |
|            32 | 1218     | Lake Leaf  | California |
|            25 | 1217     | Toad Town  | California |
|            22 | 1258     | Cascade    | Arizona    |
|            21 | 1259     | Funky Town | Arizona    |
+---------------+----------+------------+------------+

-------------------------------------------------------------------------

-- Get the number of days between the first sale and the most recent sale:

mysql> SELECT DATEDIFF(MAX(purch_date), MIN(purch_date)) 
AS Days_Between_First_And_Last_Sale 
FROM sales;
+----------------------------------+
| Days_Between_First_And_Last_Sale |
+----------------------------------+
|                             1048 |
+----------------------------------+

-------------------------------------------------------------------------

-- Get number of items sold each month and year, sort by most recent first
-- (Note: Due to the random setting up of the sales table, some months 'have no sales')
-- This store would have gone out of business ages ago...

mysql> SELECT 
	SUM(quantity) AS MonthlySales, MONTHNAME(purch_date) AS Month, 
	YEAR(purch_date) AS Year 
FROM sales 
GROUP BY Month, Year 
ORDER BY Year DESC;
+--------------+-----------+------+
| MonthlySales | Month     | Year |
+--------------+-----------+------+
|           12 | March     | 2022 |
|            6 | January   | 2022 |
|           12 | December  | 2022 |
|            6 | September | 2022 |
|            8 | February  | 2022 |
|            7 | August    | 2022 |
|            7 | August    | 2021 |
|            6 | September | 2021 |
|            5 | July      | 2021 |
|           13 | June      | 2021 |
|            6 | January   | 2021 |
|            1 | November  | 2021 |
|            3 | March     | 2021 |
|            2 | February  | 2021 |
|            4 | July      | 2020 |
|            2 | May       | 2020 |
|            9 | August    | 2020 |
|           13 | February  | 2020 |
|            6 | June      | 2020 |
|            8 | October   | 2020 |
+--------------+-----------+------+


*/